#
# Copyright 2018-2021 Elyra Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Elyra Tests
on:
  push: # all branches
  pull_request: # all branches
  schedule:
    # once a day at 3 am (UTC) (7 pm (PST))
    - cron:  '0 3 * * *'

env:
  FORCE_COLOR: true

jobs:
  prepare-yarn-cache:
    name: Prepare Cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "*"
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install
        run: yarn install --frozen-lockfile

  lint-server:
    name: Lint Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint
        run: flake8 elyra

  lint-ui:
    name: Lint UI
    needs: prepare-yarn-cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "*"
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install
        run: make yarn-install
      - name: Lint
        run: yarn eslint:check --max-warnings=0
      - name: Check format
        run: yarn prettier:check

  test-server:
    name: Test Server
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install
        # Note: Tests fail if we don't install `wheel` for some reason.
        run: | 
          python -m pip install --upgrade pip wheel
          make install-server
          make test-dependencies
      - name: Test
        run: pytest -v elyra

  test-ui:
    name: Test UI
    needs: prepare-yarn-cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "*"
      - uses: actions/setup-python@v2
        with:
          python-version: "*"
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install
        run: |
          make yarn-install
          make install-server
      - name: Test
        run: yarn test:unit

  test-integration:
    name: Run Integration Tests
    needs: prepare-yarn-cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "*"
      - uses: actions/setup-python@v2
        with:
          python-version: "*"
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install
        run: |
          make yarn-install
          make install-server
      - name: Build
        run: yarn lerna run build --stream
      - name: Setup JupyterLab
        run: |
          yarn lerna run lab:install --stream
          jupyter lab build
      - name: Cypress
        run: yarn test:integration

  # TODO: Why are building? Is this just a test that it successfully builds? this should be named accordingly
  build-documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: make docs

  validate-images:
    name: Validate Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Validate runtime images
        run: make REMOVE_RUNTIME_IMAGE=1 validate-runtime-images