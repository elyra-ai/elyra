#
# Copyright 2018-2021 Elyra Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Elyra Tests
on:
  push:
    branches: '*'
  pull_request:
    branches: '*'
  schedule:
    # once a day at 3 am (UTC) (7 pm (PST))
    - cron:  '0 3 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [ '3.6', '3.7', '3.8' ]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        clean: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Set up Node
      uses: actions/setup-node@v2
      with:
         node-version: '12.x'
    - name: Install
      run: |
        yarn install --frozen-lockfile
        pip install .[test]
    - name: Log versions
      run: |
        python --version
        pip --version
        pip freeze
        node --version
        npm --version
        yarn --version
        lerna --version
    - name: Documentation
      run: |
        make docs
    - name: Lint
      run: |
        yarn lint
        yarn format:check
    - name: Unit tests
      run: |
        yarn build
        yarn test
    - name: Integration tests
      run: |
        # Ensure there is no trace of our locked dependencies when installing
        # extension for integration tests.
        yarn lerna clean --yes
        rm -rf node_modules yarn.lock

        yarn install # Re-install cypress and friends
        yarn lab:install
        yarn lab:build
        yarn test:integration
    - name: Collect logs
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        path: |
          ${{ github.workspace }}/build/cypress-tests/screenshots//**/*
          ${{ github.workspace }}/build/cypress-tests/videos//**/*
          ${{ github.workspace }}/build/cypress-tests/jupyter.log
          /home/runner/.npm/_logs/*.log
  image_validation:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        clean: true
    - name: Validate runtime images
      run: make REMOVE_RUNTIME_IMAGE=1 validate-runtime-images
