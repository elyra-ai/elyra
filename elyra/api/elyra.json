{
  "swagger": "2.0",
  "info": {
    "title": "Elyra API",
    "description": "The API for the Elyra extensions",
    "version": "1",
    "contact": {
      "name": "Jupyter Project",
      "url": "https://jupyter.org"
    }
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "parameters": {
    "namespace": {
      "name": "namespace",
      "required": true,
      "in": "path",
      "description": "The name of the namespace",
      "type": "string"
    },
    "resource": {
      "name": "resource",
      "required": true,
      "in": "path",
      "description": "The name of the resource in a given namespace",
      "type": "string"
    }
  },
  "paths": {
    "/api/elyra.yaml": {
      "get": {
        "produces": [
          "text/x-yaml"
        ],
        "summary": "Get API information (yaml)",
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": "Returns a swagger specification in yaml"
          }
        }
      }
    },
    "/api/elyra.json": {
      "get": {
        "summary": "Get API information (json)",
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": "Returns a swagger specification in json"
          }
        }
      }
    },
    "/api/metadata/{namespace}": {
      "parameters": [
        {
          "$ref": "#/parameters/namespace"
        }
      ],
      "get": {
        "summary": "Get metadata for a given namespace",
        "tags": [
          "metadata"
        ],
        "responses": {
          "200": {
            "description": "Returns the metadata objects for a given namespace",
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "array",
                  "description": "The name of the namespace.",
                  "items": {
                    "$ref": "#/definitions/NamespaceResource"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Namespace not found"
          }
        }
      }
    },
    "/api/metadata/{namespace}/{resource}": {
      "parameters": [
        {
          "$ref": "#/parameters/namespace"
        },
        {
          "$ref": "#/parameters/resource"
        }
      ],
      "get": {
        "summary": "Get metadata for a given resource in a given namespace",
        "tags": [
          "metadata"
        ],
        "responses": {
          "200": {
            "description": "Returns the metadata object for a given resource in a given namespace",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "404": {
            "description": "Namespace/Resource not found"
          }
        }
      }
    },
    "/api/scheduler": {
      "post": {
        "summary": "Submit a pipeline definition for execution",
        "tags": [
          "pipelines"
        ],
        "parameters": [
          {
            "name": "pipeline_definition",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PipelineDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pipeline has been successfully submitted",
            "schema": {
              "$ref": "#/definitions/PipelineSubmissionSuccess"
            }
          },
          "500": {
            "description": "Error occurred submitting pipeline",
            "schema": {
              "$ref": "#/definitions/PipelineSubmissionError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "NamespaceResource": {
      "description": "The set of properties comprising a namespace resource entity",
      "required": [
        "name",
        "display_name",
        "schema_name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The canonical name of the resource"
        },
        "display_name": {
          "type": "string",
          "description": "The display name of the resource"
        },
        "schema_name": {
          "type": "string",
          "description": "The schema name used to validate the resource"
        },
        "resource": {
          "type": "string",
          "format": "filename",
          "description": "Path to json file containing resource definition"
        },
        "metadata": {
          "type": "object",
          "description": "A free-form dictionary consisting of additional information about the resource."
        }
      }
    },
    "PipelineDefinition": {
      "description": "Pipeline Definition",
      "required": [
        "id",
        "primary_pipeline",
        "pipelines"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The uuid of the pipeline definition"
        },
        "primary_pipeline": {
          "type": "string",
          "format": "uuid",
          "description": "The uuid of the primary pipeline"
        },
        "pipelines": {
          "type": "array",
          "description": "A list of pipelines to process for submission",
          "items": {
            "$ref": "#/definitions/Pipeline"
          }
        }
      }
    },
    "Pipeline": {
      "description": "Pipeline entry within a definition",
      "required": [
        "id",
        "nodes",
        "app_data"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The uuid of the pipeline"
        },
        "nodes": {
          "type": "array",
          "description": "A list of node objects",
          "items": {
            "$ref": "#/definitions/Node"
          }
        },
        "app_data": {
          "$ref": "#/definitions/PipelineAppData",
          "description": "Application data associated with the pipeline"
        }
      }
    },
    "Node": {
      "description": "Node definition within a pipeline",
      "required": [
        "id",
        "type",
        "app_data"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The uuid of the node"
        },
        "type": {
          "type": "string",
          "description": "The type of node, must be 'execution_node'",
          "enum": [
            "execution_node"
          ]
        },
        "app_data": {
          "$ref": "#/definitions/NodeAppData",
          "description": "Application data associated with the node"
        }
      }
    },
    "PipelineAppData": {
      "description": "Describes the app_data object within a pipeline",
      "required": [
        "title",
        "runtime",
        "runtime_config"
      ],
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the pipeline"
        },
        "runtime": {
          "type": "string",
          "description": "The name of the runtime associated with the operations in the pipeline"
        },
        "runtime-config": {
          "type": "string",
          "description": "The name of the configuration within the runtime (namespace) associated with the pipeline"
        },
        "ui_data": {
          "type": "object"
        }
      }
    },
    "NodeAppData": {
      "description": "Describes the app_data object within a node of a pipeline",
      "properties": {
        "artifact": {
          "type": "string",
          "description": "The path to the artifact (tar file) associated with the node"
        },
        "image": {
          "type": "string",
          "description": "The name of the docker image associated with the node"
        },
        "runtime-config": {
          "type": "string",
          "description": "The name of the configuration within the runtime (namespace) associated with the pipeline"
        },
        "ui_data": {
          "type": "object"
        }
      }
    },
    "PipelineSubmissionError": {
      "description": "Response for failed pipeline submission",
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "status": {
          "type": "string",
          "description": "Status \"error\""
        },
        "message": {
          "type": "string",
          "description": "Message indicating result of pipeline submission"
        }
      }
    },
    "PipelineSubmissionSuccess": {
      "description": "Response for successful pipeline submission",
      "required": [
        "status",
        "message",
        "url"
      ],
      "properties": {
        "status": {
          "type": "string",
          "description": "Status \"ok\""
        },
        "message": {
          "type": "string",
          "description": "Message indicating result of pipeline submission"
        },
        "url": {
          "type": "string",
          "description": "URL associated with sucessfully submitted pipeline",
          "format": "url"
        }
      }
    }
  }
}