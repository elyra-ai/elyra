openapi: 3.0.1
info:
  title: Elyra API
  description: The API for the Elyra extensions
  contact:
    name: Elyra
    url: https://github.com/elyra-ai/elyra
  version: "1"

paths:

  /api/elyra.yaml:
    get:
      tags:
      - api
      summary: Get API information (yaml)
      responses:
        200:
          description: Returns a swagger specification in yaml
          content:
            text/x-yaml:
              schema:
                type: string
        500:
          description: Unexpected error.

  /api/namespace:
    get:
      tags:
      - namespace
      summary: Get current namespaces
      responses:
        200:
          description: Returns the list of current namespaces
          content:
            application/json:
              schema:
                type: object
                properties:
                  namespaces:
                    items: {
                      type: string
                    }
                    description: The list of current namespaces.
        500:
          description: Unexpected error.

  /api/schema/{namespace}:
    get:
      tags:
      - schema
      summary: Get schemas for a given namespace
      parameters:
      - name: namespace
        in: path
        description: The name of the namespace
        required: true
        schema:
          type: string
      responses:
        200:
          description: Returns the schema instances for a given namespace
          content:
            application/json:
              schema:
                type: object
                properties:
                  namespace:
                    type: array
                    description: The schema instances within the namespace
                    items:
                      $ref: '#/components/schemas/SchemaResource'
        404:
          description: Namespace not found
          content: {}
        500:
          description: Unexpected error.

  /api/schema/{namespace}/{resource}:
    get:
      tags:
      - schema
      summary: Get a given schema instance from a given namespace
      parameters:
      - name: namespace
        in: path
        description: The name of the namespace
        required: true
        schema:
          type: string
      - name: resource
        in: path
        description: The name of the resource in a given namespace
        required: true
        schema:
          type: string
      responses:
        200:
          description: The named schema instance within the namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaResource'
        404:
          description: Namespace/Resource not found
          content: {}
        500:
          description: Unexpected error.

  /api/metadata/{namespace}:
    get:
      tags:
      - metadata
      summary: Get metadata for a given namespace
      parameters:
      - name: namespace
        in: path
        description: The name of the namespace
        required: true
        schema:
          type: string
      responses:
        200:
          description: The metadata instances within the namespace
          content:
            application/json:
              schema:
                type: object
                properties:
                  namespace:
                    type: array
                    description: The name of the namespace.
                    items:
                      $ref: '#/components/schemas/MetadataResource'
        404:
          description: Namespace not found
          content: {}
        500:
          description: Unexpected error.
    post:
      tags:
      - metadata
      summary: Create a metadata instance in a given namespace
      parameters:
      - name: namespace
        in: path
        description: The name of the namespace
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataResourceBodyPost'

      responses:
        201:
          description: The newly-created metadata instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataResource'
          headers:
            Location:
              description: Resource endpoint
              schema:
                type: string
                format: url
        400:
          description: An error (validation, syntax) occurred relative to the instance data
        404:
          description: Namespace not found
        409:
          description: Resource already exists
        500:
          description: Unexpected error.

  /api/metadata/{namespace}/{resource}:
    get:
      tags:
      - metadata
      summary: Get a given metadata instance from a given namespace
      parameters:
      - name: namespace
        in: path
        description: The name of the namespace
        required: true
        schema:
          type: string
      - name: resource
        in: path
        description: The name of the resource in a given namespace
        required: true
        schema:
          type: string
      responses:
        200:
          description: The named metadata instance within the namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataResource'
        404:
          description: Namespace/Resource not found
          content: {}
        500:
          description: Unexpected error.

    put:
      tags:
        - metadata
      summary: Update a given metadata resource within a given namespace
      parameters:
        - name: namespace
          in: path
          description: The name of the namespace
          required: true
          schema:
            type: string
        - name: resource
          in: path
          description: The name of the resource in a given namespace
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataResourceBodyPut'

      responses:
        200:
          description: The updated metadata instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataResource'
        400:
          description: The operation is not supported
        404:
          description: The resource to update was not found
        500:
          description: Unexpected error.

    delete:
      tags:
      - metadata
      summary: Delete a given metadata resource from a given namespace
      parameters:
      - name: namespace
        in: path
        description: The name of the namespace
        required: true
        schema:
          type: string
      - name: resource
        in: path
        description: The name of the resource in a given namespace
        required: true
        schema:
          type: string
      responses:
        204:
          description: The resource was successfully deleted
        403:
          description: Deletion of the resource is not permitted
        404:
          description: The resource was not found
        500:
          description: Unexpected error.


components:
  schemas:
    MetadataResourceBodyPost:
      description: The set of properties comprising the request body for POST
      required:
        - display_name
        - name
        - schema_name
        - metadata
      type: object
      properties:
        name:
          type: string
          description: The canonical name of the resource
        display_name:
          type: string
          description: The display name of the resource
        schema_name:
          type: string
          description: The schema name used to validate the resource
        metadata:
          type: object
          properties: {}
          description: A free-form dictionary consisting of additional information
            about the resource.

    MetadataResourceBodyPut:
      description: The set of properties comprising the request body for PUT; no field is required
      type: object
      properties:
        name:
          type: string
          description: The canonical name of the resource
        display_name:
          type: string
          description: The display name of the resource
        schema_name:
          type: string
          description: The schema name used to validate the resource
        metadata:
          type: object
          properties: {}
          description: A free-form dictionary consisting of additional information
            about the resource.

    MetadataResource:
      description: The set of properties comprising a metadata resource entity
      required:
      - display_name
      - name
      - schema_name
      type: object
      properties:
        name:
          type: string
          description: The canonical name of the metadata resource
        display_name:
          type: string
          description: The display name of the metadata resource
        schema_name:
          type: string
          description: The schema name used to validate the metadata resource
        metadata:
          type: object
          properties: {}
          description: A free-form dictionary consisting of additional information
            about the resource.

    SchemaResource:
      description: The set of properties comprising a schema resource entity
      required:
      - name
      - namespace
      type: object
      properties:
        namespace:
          type: string
          description: The namespace of the schema resource
        name:
          type: string
          description: The canonical name of the schema resource
        title:
          type: string
          description: The title of the schema resource
        properties:
          type: object
          properties: {}
          description: A free-form dictionary consisting of additional information
            about the resource.

  parameters:
    namespace:
      name: namespace
      in: path
      description: The name of the namespace
      required: true
      schema:
        type: string
    resource:
      name: resource
      in: path
      description: The name of the resource in a given namespace
      required: true
      schema:
        type: string
